# Predicates
<activity_objects>: [uid] @count @reverse .
<activity_user>: uid @reverse .
<activity_verb>: string @index(exact) .
<comment_date>: datetime @index(day) .
<comment_text>: string .
<comment_user>: uid @reverse .
<group_members>: [uid] @count @reverse .
<group_name>: string @index(exact) .
<state_group>: uid @reverse .
<state_name>: string @index(exact) .
<state_value>: int @index(int) .
<tag_name>: string @index(exact) .
<task_activities>: [uid] @count @reverse .
<task_ancestors>: [uid] @count @reverse .
<task_asignees>: [uid] @count @reverse .
<task_blockers>: [uid] @count @reverse .
<task_comments>: [uid] @count @reverse .
<task_description>: string @index(exact, fulltext, trigram) .
<task_group>: uid @reverse .
<task_owner>: uid @reverse .
<task_state>: int @index(int) .
<task_tags>: [uid] @count @reverse .
<task_title>: string @index(exact, fulltext, trigram) .
<user_bio>: string @index(exact, fulltext, trigram) .
<user_email>: string @index(exact, fulltext, trigram) .
<user_name>: string @index(exact, fulltext, trigram) .
<user_password>: password .
<user_phone>: string @index(exact, fulltext, trigram) .

# Create Users

{
    set {
        _:mafinar <user_name> "Mafinar Khan" .
        _:mafinar <user_email> "mafinar@gmail.com" .
        _:mafinar <user_bio> "Senior Backend Engineer" .
        _:mafinar <user_password> "123456" .
        _:mafinar <user_phone> "+1-647-MAFINAR" .

        _:tawhida <user_name> "Tawhida Hussain" .
        _:tawhida <user_email> "tawhida.hussain@mafinar.ca" .
        _:tawhida <user_bio> "Marketing Manager" .
        _:tawhida <user_password> "123456" .
        _:tawhida <user_phone> "+1-647-TAWHIDA" .

        _:arsalan <user_name> "Arsalan Khan" .
        _:arsalan <user_email> "arsalan@mafinar.ca" .
        _:arsalan <user_bio> "Full-stack Engineer" .
        _:arsalan <user_password> "123456" .
        _:arsalan <user_phone> "+1-647-ARSALAN" .

        _:maruf <user_name> "Maruf Khan" .
        _:maruf <user_email> "maruf@mafinar.ca" .
        _:maruf <user_bio> "Frontend Engineer" .
        _:maruf <user_password> "123456" .
        _:maruf <user_phone> "+1-647-MARUFKH" .

        _:mabruk <user_name> "Mabruk Khan" .
        _:mabruk <user_email> "mabruk@mafinar.ca" .
        _:mabruk <user_bio> "Systems Engineer" .
        _:mabruk <user_password> "123456" .
        _:mabruk <user_phone> "+1-647-MABRUKK" .
    }
}

# CREATE GROUPS

{
    set {
        _:theScore <group_name> "theScore" .
        _:theScore <group_members> <0x16> .
        _:theScore <group_members> <0x17> .
        _:theScore <group_members> <0x18> .
        _:theScore <group_members> <0x19> .
        _:theScore <group_members> <0x1a> .

        _:mafinarca <group_name> "MafinarCA" .
        _:mafinarca <group_members> <0x16> .
        _:mafinarca <group_members> <0x17> .
        _:mafinarca <group_members> <0x1a> .
    }
}


# CREATE TASKS

{
    set {
        _:roottag <tag_name> "Root" .
        _:epictag <tag_name> "Epic" .
        _:backendtag <tag_name> "Backend" .
        _:apitag <tag_name> "API" .
        _:fronendtag <tag_name> "Front-end" .
        _:pmtag <tag_name> "Project Management" .
        _:osstag <tag_name> "Open Source" .

        _:kw <task_title> "KarmaWerks" .
        _:kw <task_description> "KarmaWerks is a task management tool" .
        _:kw <task_group> <0x1f> .
        _:kw <task_owner> <0x16> .
        _:kw <task_tags> _:pmtag .
        _:kw <task_tags> _:osstag .

        _:backend <task_title> "Database Design" .
        _:backend <task_description> "Epic for designing the database" .
        _:backend <task_owner> <0x16> .
        _:backend <task_tags> _:epictag .
        _:backend <task_tags> _:backendtag .
        _:backend <task_ancestors> _:kw .

        _:api <task_title> "GraphQL API Design" .
        _:api <task_description> "Epic for designing the GraphQL API" .
        _:api <task_owner> <0x16> .
        _:api <task_tags> _:epictag .
        _:api <task_tags> _:apitag .
        _:api <task_ancestors> _:kw .

        _:frontend <task_title> "Front-end Design" .
        _:frontend <task_description> "Front-end Epic" .
        _:frontend <task_owner> <0x16> .
        _:frontend <task_tags> _:epictag .
        _:frontend <task_tags> _:frontendtag .
        _:frontend <task_ancestors> _:kw .

        _:auth <task_title> "Design authentication predicates" .
        _:auth <task_description> "Predicate design for authentication and user" .
        _:auth <task_owner> <0x16> .
        _:auth <task_asignees> <0x17> .
        _:auth <task_asignees> <0x1a> .
        _:auth <task_ancestors> _:backend .

        _:authapi <task_title> "Registration/Login" .
        _:authapi <task_description> "Design API for registration and login" .
        _:authapi <task_owner> <0x17> .
        _:authapi <task_asignees> <0x16> .
        _:authapi <task_asignees> <0x1a> .
        _:authapi <task_ancestors> _:api .
        _:authapi <task_blockers> _:auth .
    }
}